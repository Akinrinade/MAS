package com.srcim2018.semanticmodelimpl.impl;

import com.srcim2018.semanticmodelimpl.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultProduct <br>
 * @version generated on Wed Apr 03 18:34:49 WEST 2019 by root
 */
public class DefaultProduct extends WrappedIndividualImpl implements Product {

    public DefaultProduct(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/srcim2018/ontologies/srcimOntology/consumes
     */
     
    public Collection<? extends Skill> getConsumes() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_CONSUMES,
                                               DefaultSkill.class);
    }

    public boolean hasConsumes() {
	   return !getConsumes().isEmpty();
    }

    public void addConsumes(Skill newConsumes) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_CONSUMES,
                                       newConsumes);
    }

    public void removeConsumes(Skill oldConsumes) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_CONSUMES,
                                          oldConsumes);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/srcim2018/ontologies/srcimOntology#InitialPosition
     */
     
    public Collection<? extends String> getInitialPosition() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_INITIALPOSITION, String.class);
    }

    public boolean hasInitialPosition() {
		return !getInitialPosition().isEmpty();
    }

    public void addInitialPosition(String newInitialPosition) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_INITIALPOSITION, newInitialPosition);
    }

    public void removeInitialPosition(String oldInitialPosition) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_INITIALPOSITION, oldInitialPosition);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/srcim2018/ontologies/srcimOntology/Description
     */
     
    public Collection<? extends String> getDescription() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESCRIPTION, String.class);
    }

    public boolean hasDescription() {
		return !getDescription().isEmpty();
    }

    public void addDescription(String newDescription) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESCRIPTION, newDescription);
    }

    public void removeDescription(String oldDescription) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESCRIPTION, oldDescription);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/srcim2018/ontologies/srcimOntology/Destiny
     */
     
    public Collection<? extends String> getDestiny() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESTINY, String.class);
    }

    public boolean hasDestiny() {
		return !getDestiny().isEmpty();
    }

    public void addDestiny(String newDestiny) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESTINY, newDestiny);
    }

    public void removeDestiny(String oldDestiny) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_DESTINY, oldDestiny);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/srcim2018/ontologies/srcimOntology/ID
     */
     
    public Collection<? extends String> getID() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, String.class);
    }

    public boolean hasID() {
		return !getID().isEmpty();
    }

    public void addID(String newID) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, newID);
    }

    public void removeID(String oldID) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_ID, oldID);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/srcim2018/ontologies/srcimOntology/ResourceExecutor
     */
     
    public Collection<? extends String> getResourceExecutor() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_RESOURCEEXECUTOR, String.class);
    }

    public boolean hasResourceExecutor() {
		return !getResourceExecutor().isEmpty();
    }

    public void addResourceExecutor(String newResourceExecutor) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_RESOURCEEXECUTOR, newResourceExecutor);
    }

    public void removeResourceExecutor(String oldResourceExecutor) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_RESOURCEEXECUTOR, oldResourceExecutor);
    }


}
